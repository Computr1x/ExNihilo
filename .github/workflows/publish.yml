# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Publish Nuget

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    env:
      BUILD_CONFIG: 'Release'
      PROJECT: './ExNihilo/ExNihilo.csproj'
      TESTS: './Tests/Tests.csproj'

    runs-on: ubuntu-latest

    steps:
      # Store the version, stripping any v-prefix
      - name: Write release version
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo Version: $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      # Setup .net env
      - uses: actions/checkout@v4
        with:
          ref: master
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - uses: nuget/setup-nuget@v1
        with:
          nuget-version: 'latest'

      # Restore dependencies
      - name: Restore dependencies project
        run: dotnet restore $PROJECT
      - name: Restore dependencies tests
        run: dotnet restore $TESTS

      # Run tests
      - name: Build tests
        run: dotnet build $TESTS --configuration $BUILD_CONFIG --no-restore
      - name: Run tests
        run: dotnet test /p:Configuration=$BUILD_CONFIG --no-restore --no-build --verbosity normal

      # Create release
      - name: Pack project
        run: dotnet pack $PROJECT --configuration $BUILD_CONFIG --no-restore
      
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: "Release v${{ env.VERSION }}"
          prerelease: false
          files: |
            ./ExNihilo/ExNihilo/out/*.nupkg
            ./ExNihilo/ExNihilo/ExNihilo/bin/${{BUILD_CONFIG}}/net*/ExNihilo.dll
            
      #- name: Push generated package to Nuget registry
      #  run: dotnet nuget push **\*.nupkg --skip-duplicate -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}
